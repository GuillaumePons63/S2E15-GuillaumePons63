networks:
  nodejs:
    driver: bridge
services:
  npm:
    image: node:current-alpine3.16
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - nodejs

  pgsql:
    image: postgres:14.3-alpine3.16
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: student
    volumes:
      - ./pgsql:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - nodejs

  client:
    image: node:current-alpine3.16
    ports:
      - "3000:3000"
    expose:
      - "3000"
    stdin_open: true
    volumes:
      - ./client:/var/www/html/client
    networks:
      - nodejs
    entrypoint: [ 'npm', 'start' , '--host', '0.0.0.0' ]
    working_dir: /var/www/html/client
    depends_on:
      - postgres
      - express-server

  express-server:
    image: node:current-alpine3.16
    volumes:
      - ./server:/var/www/html/postgres
    networks:
      - nodejs
    ports:
      - '5000:5000'
    expose:
      - '5000'
    working_dir: /var/www/html/postgres
    entrypoint: [ 'npm', 'run', 'dev', '--host', '0.0.0.0' ]
    depends_on:
      - redisserver
      - pgsql

  redisserver:
    image: redis:latest
    volumes:
      - ./redisdata:/data
    networks:
      - nodejs

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    networks:
      - nodejs

  adminer:
    build:
      context: .
      dockerfile: adminer.dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - pgsql
      - php
    networks:
      - nodejs



